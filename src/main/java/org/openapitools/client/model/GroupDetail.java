/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AttachedPolicy;
import org.openapitools.client.model.PolicyDetail;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Contains information about an IAM group, including all of the group&#39;s policies.&lt;/p&gt; &lt;p&gt;This data type is used as a response element in the &lt;a&gt;GetAccountAuthorizationDetails&lt;/a&gt; operation.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class GroupDetail {
  public static final String SERIALIZED_NAME_PATH = "Path";
  @SerializedName(SERIALIZED_NAME_PATH)
  @javax.annotation.Nullable
  private String path;

  public static final String SERIALIZED_NAME_GROUP_NAME = "GroupName";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  @javax.annotation.Nullable
  private String groupName;

  public static final String SERIALIZED_NAME_GROUP_ID = "GroupId";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  @javax.annotation.Nullable
  private String groupId;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  @javax.annotation.Nullable
  private String arn;

  public static final String SERIALIZED_NAME_CREATE_DATE = "CreateDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime createDate;

  public static final String SERIALIZED_NAME_GROUP_POLICY_LIST = "GroupPolicyList";
  @SerializedName(SERIALIZED_NAME_GROUP_POLICY_LIST)
  @javax.annotation.Nullable
  private List<PolicyDetail> groupPolicyList;

  public static final String SERIALIZED_NAME_ATTACHED_MANAGED_POLICIES = "AttachedManagedPolicies";
  @SerializedName(SERIALIZED_NAME_ATTACHED_MANAGED_POLICIES)
  @javax.annotation.Nullable
  private List<AttachedPolicy> attachedManagedPolicies;

  public GroupDetail() {
  }

  public GroupDetail path(@javax.annotation.Nullable String path) {
    this.path = path;
    return this;
  }

  /**
   * The path to the group. For more information about paths, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\&quot;&gt;IAM identifiers&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(@javax.annotation.Nullable String path) {
    this.path = path;
  }


  public GroupDetail groupName(@javax.annotation.Nullable String groupName) {
    this.groupName = groupName;
    return this;
  }

  /**
   * The friendly name that identifies the group.
   * @return groupName
   */
  @javax.annotation.Nullable
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(@javax.annotation.Nullable String groupName) {
    this.groupName = groupName;
  }


  public GroupDetail groupId(@javax.annotation.Nullable String groupId) {
    this.groupId = groupId;
    return this;
  }

  /**
   * The stable and unique string identifying the group. For more information about IDs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\&quot;&gt;IAM identifiers&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.
   * @return groupId
   */
  @javax.annotation.Nullable
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(@javax.annotation.Nullable String groupId) {
    this.groupId = groupId;
  }


  public GroupDetail arn(@javax.annotation.Nullable String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * &lt;p&gt;The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.&lt;/p&gt; &lt;p&gt;For more information about ARNs, go to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;. &lt;/p&gt;
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(@javax.annotation.Nullable String arn) {
    this.arn = arn;
  }


  public GroupDetail createDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * The date and time, in &lt;a href&#x3D;\&quot;http://www.iso.org/iso/iso8601\&quot;&gt;ISO 8601 date-time format&lt;/a&gt;, when the group was created.
   * @return createDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public GroupDetail groupPolicyList(@javax.annotation.Nullable List<PolicyDetail> groupPolicyList) {
    this.groupPolicyList = groupPolicyList;
    return this;
  }

  public GroupDetail addGroupPolicyListItem(PolicyDetail groupPolicyListItem) {
    if (this.groupPolicyList == null) {
      this.groupPolicyList = new ArrayList<>();
    }
    this.groupPolicyList.add(groupPolicyListItem);
    return this;
  }

  /**
   * A list of the inline policies embedded in the group.
   * @return groupPolicyList
   */
  @javax.annotation.Nullable
  public List<PolicyDetail> getGroupPolicyList() {
    return groupPolicyList;
  }

  public void setGroupPolicyList(@javax.annotation.Nullable List<PolicyDetail> groupPolicyList) {
    this.groupPolicyList = groupPolicyList;
  }


  public GroupDetail attachedManagedPolicies(@javax.annotation.Nullable List<AttachedPolicy> attachedManagedPolicies) {
    this.attachedManagedPolicies = attachedManagedPolicies;
    return this;
  }

  public GroupDetail addAttachedManagedPoliciesItem(AttachedPolicy attachedManagedPoliciesItem) {
    if (this.attachedManagedPolicies == null) {
      this.attachedManagedPolicies = new ArrayList<>();
    }
    this.attachedManagedPolicies.add(attachedManagedPoliciesItem);
    return this;
  }

  /**
   * A list of the managed policies attached to the group.
   * @return attachedManagedPolicies
   */
  @javax.annotation.Nullable
  public List<AttachedPolicy> getAttachedManagedPolicies() {
    return attachedManagedPolicies;
  }

  public void setAttachedManagedPolicies(@javax.annotation.Nullable List<AttachedPolicy> attachedManagedPolicies) {
    this.attachedManagedPolicies = attachedManagedPolicies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupDetail groupDetail = (GroupDetail) o;
    return Objects.equals(this.path, groupDetail.path) &&
        Objects.equals(this.groupName, groupDetail.groupName) &&
        Objects.equals(this.groupId, groupDetail.groupId) &&
        Objects.equals(this.arn, groupDetail.arn) &&
        Objects.equals(this.createDate, groupDetail.createDate) &&
        Objects.equals(this.groupPolicyList, groupDetail.groupPolicyList) &&
        Objects.equals(this.attachedManagedPolicies, groupDetail.attachedManagedPolicies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(path, groupName, groupId, arn, createDate, groupPolicyList, attachedManagedPolicies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupDetail {\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    groupPolicyList: ").append(toIndentedString(groupPolicyList)).append("\n");
    sb.append("    attachedManagedPolicies: ").append(toIndentedString(attachedManagedPolicies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("Path", "GroupName", "GroupId", "Arn", "CreateDate", "GroupPolicyList", "AttachedManagedPolicies"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GroupDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GroupDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GroupDetail is not found in the empty JSON string", GroupDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GroupDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GroupDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Path") != null && !jsonObj.get("Path").isJsonNull()) && !jsonObj.get("Path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Path").toString()));
      }
      if ((jsonObj.get("GroupName") != null && !jsonObj.get("GroupName").isJsonNull()) && !jsonObj.get("GroupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GroupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GroupName").toString()));
      }
      if ((jsonObj.get("GroupId") != null && !jsonObj.get("GroupId").isJsonNull()) && !jsonObj.get("GroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GroupId").toString()));
      }
      if ((jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) && !jsonObj.get("Arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Arn").toString()));
      }
      if (jsonObj.get("GroupPolicyList") != null && !jsonObj.get("GroupPolicyList").isJsonNull()) {
        JsonArray jsonArraygroupPolicyList = jsonObj.getAsJsonArray("GroupPolicyList");
        if (jsonArraygroupPolicyList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("GroupPolicyList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `GroupPolicyList` to be an array in the JSON string but got `%s`", jsonObj.get("GroupPolicyList").toString()));
          }

          // validate the optional field `GroupPolicyList` (array)
          for (int i = 0; i < jsonArraygroupPolicyList.size(); i++) {
            PolicyDetail.validateJsonElement(jsonArraygroupPolicyList.get(i));
          };
        }
      }
      if (jsonObj.get("AttachedManagedPolicies") != null && !jsonObj.get("AttachedManagedPolicies").isJsonNull()) {
        JsonArray jsonArrayattachedManagedPolicies = jsonObj.getAsJsonArray("AttachedManagedPolicies");
        if (jsonArrayattachedManagedPolicies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("AttachedManagedPolicies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `AttachedManagedPolicies` to be an array in the JSON string but got `%s`", jsonObj.get("AttachedManagedPolicies").toString()));
          }

          // validate the optional field `AttachedManagedPolicies` (array)
          for (int i = 0; i < jsonArrayattachedManagedPolicies.size(); i++) {
            AttachedPolicy.validateJsonElement(jsonArrayattachedManagedPolicies.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GroupDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GroupDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GroupDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GroupDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<GroupDetail>() {
           @Override
           public void write(JsonWriter out, GroupDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GroupDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GroupDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GroupDetail
   * @throws IOException if the JSON string is invalid with respect to GroupDetail
   */
  public static GroupDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GroupDetail.class);
  }

  /**
   * Convert an instance of GroupDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

