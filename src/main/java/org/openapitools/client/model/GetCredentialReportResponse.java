/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ReportFormatType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the response to a successful &lt;a&gt;GetCredentialReport&lt;/a&gt; request. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class GetCredentialReportResponse {
  public static final String SERIALIZED_NAME_CONTENT = "Content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  @javax.annotation.Nullable
  private String content;

  public static final String SERIALIZED_NAME_REPORT_FORMAT = "ReportFormat";
  @SerializedName(SERIALIZED_NAME_REPORT_FORMAT)
  @javax.annotation.Nullable
  private ReportFormatType reportFormat;

  public static final String SERIALIZED_NAME_GENERATED_TIME = "GeneratedTime";
  @SerializedName(SERIALIZED_NAME_GENERATED_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime generatedTime;

  public GetCredentialReportResponse() {
  }

  public GetCredentialReportResponse content(@javax.annotation.Nullable String content) {
    this.content = content;
    return this;
  }

  /**
   * Contains the credential report. The report is Base64-encoded.
   * @return content
   */
  @javax.annotation.Nullable
  public String getContent() {
    return content;
  }

  public void setContent(@javax.annotation.Nullable String content) {
    this.content = content;
  }


  public GetCredentialReportResponse reportFormat(@javax.annotation.Nullable ReportFormatType reportFormat) {
    this.reportFormat = reportFormat;
    return this;
  }

  /**
   * The format (MIME type) of the credential report.
   * @return reportFormat
   */
  @javax.annotation.Nullable
  public ReportFormatType getReportFormat() {
    return reportFormat;
  }

  public void setReportFormat(@javax.annotation.Nullable ReportFormatType reportFormat) {
    this.reportFormat = reportFormat;
  }


  public GetCredentialReportResponse generatedTime(@javax.annotation.Nullable OffsetDateTime generatedTime) {
    this.generatedTime = generatedTime;
    return this;
  }

  /**
   *  The date and time when the credential report was created, in &lt;a href&#x3D;\&quot;http://www.iso.org/iso/iso8601\&quot;&gt;ISO 8601 date-time format&lt;/a&gt;.
   * @return generatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getGeneratedTime() {
    return generatedTime;
  }

  public void setGeneratedTime(@javax.annotation.Nullable OffsetDateTime generatedTime) {
    this.generatedTime = generatedTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCredentialReportResponse getCredentialReportResponse = (GetCredentialReportResponse) o;
    return Objects.equals(this.content, getCredentialReportResponse.content) &&
        Objects.equals(this.reportFormat, getCredentialReportResponse.reportFormat) &&
        Objects.equals(this.generatedTime, getCredentialReportResponse.generatedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, reportFormat, generatedTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCredentialReportResponse {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    reportFormat: ").append(toIndentedString(reportFormat)).append("\n");
    sb.append("    generatedTime: ").append(toIndentedString(generatedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("Content", "ReportFormat", "GeneratedTime"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCredentialReportResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCredentialReportResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCredentialReportResponse is not found in the empty JSON string", GetCredentialReportResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCredentialReportResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCredentialReportResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Content") != null && !jsonObj.get("Content").isJsonNull()) && !jsonObj.get("Content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Content").toString()));
      }
      // validate the optional field `ReportFormat`
      if (jsonObj.get("ReportFormat") != null && !jsonObj.get("ReportFormat").isJsonNull()) {
        ReportFormatType.validateJsonElement(jsonObj.get("ReportFormat"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCredentialReportResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCredentialReportResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCredentialReportResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCredentialReportResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCredentialReportResponse>() {
           @Override
           public void write(JsonWriter out, GetCredentialReportResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCredentialReportResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCredentialReportResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCredentialReportResponse
   * @throws IOException if the JSON string is invalid with respect to GetCredentialReportResponse
   */
  public static GetCredentialReportResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCredentialReportResponse.class);
  }

  /**
   * Convert an instance of GetCredentialReportResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

