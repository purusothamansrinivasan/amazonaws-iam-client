/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.OrganizationsDecisionDetail;
import org.openapitools.client.model.PermissionsBoundaryDecisionDetail;
import org.openapitools.client.model.PolicyEvaluationDecisionType;
import org.openapitools.client.model.ResourceSpecificResult;
import org.openapitools.client.model.Statement;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Contains the results of a simulation.&lt;/p&gt; &lt;p&gt;This data type is used by the return parameter of &lt;code&gt; &lt;a&gt;SimulateCustomPolicy&lt;/a&gt; &lt;/code&gt; and &lt;code&gt; &lt;a&gt;SimulatePrincipalPolicy&lt;/a&gt; &lt;/code&gt;.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class EvaluationResult {
  public static final String SERIALIZED_NAME_EVAL_ACTION_NAME = "EvalActionName";
  @SerializedName(SERIALIZED_NAME_EVAL_ACTION_NAME)
  @javax.annotation.Nonnull
  private String evalActionName;

  public static final String SERIALIZED_NAME_EVAL_RESOURCE_NAME = "EvalResourceName";
  @SerializedName(SERIALIZED_NAME_EVAL_RESOURCE_NAME)
  @javax.annotation.Nullable
  private String evalResourceName;

  public static final String SERIALIZED_NAME_EVAL_DECISION = "EvalDecision";
  @SerializedName(SERIALIZED_NAME_EVAL_DECISION)
  @javax.annotation.Nonnull
  private PolicyEvaluationDecisionType evalDecision;

  public static final String SERIALIZED_NAME_MATCHED_STATEMENTS = "MatchedStatements";
  @SerializedName(SERIALIZED_NAME_MATCHED_STATEMENTS)
  @javax.annotation.Nullable
  private List<Statement> matchedStatements;

  public static final String SERIALIZED_NAME_MISSING_CONTEXT_VALUES = "MissingContextValues";
  @SerializedName(SERIALIZED_NAME_MISSING_CONTEXT_VALUES)
  @javax.annotation.Nullable
  private List<String> missingContextValues;

  public static final String SERIALIZED_NAME_ORGANIZATIONS_DECISION_DETAIL = "OrganizationsDecisionDetail";
  @SerializedName(SERIALIZED_NAME_ORGANIZATIONS_DECISION_DETAIL)
  @javax.annotation.Nullable
  private OrganizationsDecisionDetail organizationsDecisionDetail;

  public static final String SERIALIZED_NAME_PERMISSIONS_BOUNDARY_DECISION_DETAIL = "PermissionsBoundaryDecisionDetail";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS_BOUNDARY_DECISION_DETAIL)
  @javax.annotation.Nullable
  private PermissionsBoundaryDecisionDetail permissionsBoundaryDecisionDetail;

  public static final String SERIALIZED_NAME_EVAL_DECISION_DETAILS = "EvalDecisionDetails";
  @SerializedName(SERIALIZED_NAME_EVAL_DECISION_DETAILS)
  @javax.annotation.Nullable
  private Map<String, PolicyEvaluationDecisionType> evalDecisionDetails;

  public static final String SERIALIZED_NAME_RESOURCE_SPECIFIC_RESULTS = "ResourceSpecificResults";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SPECIFIC_RESULTS)
  @javax.annotation.Nullable
  private List<ResourceSpecificResult> resourceSpecificResults;

  public EvaluationResult() {
  }

  public EvaluationResult evalActionName(@javax.annotation.Nonnull String evalActionName) {
    this.evalActionName = evalActionName;
    return this;
  }

  /**
   * The name of the API operation tested on the indicated resource.
   * @return evalActionName
   */
  @javax.annotation.Nonnull
  public String getEvalActionName() {
    return evalActionName;
  }

  public void setEvalActionName(@javax.annotation.Nonnull String evalActionName) {
    this.evalActionName = evalActionName;
  }


  public EvaluationResult evalResourceName(@javax.annotation.Nullable String evalResourceName) {
    this.evalResourceName = evalResourceName;
    return this;
  }

  /**
   * The ARN of the resource that the indicated API operation was tested on.
   * @return evalResourceName
   */
  @javax.annotation.Nullable
  public String getEvalResourceName() {
    return evalResourceName;
  }

  public void setEvalResourceName(@javax.annotation.Nullable String evalResourceName) {
    this.evalResourceName = evalResourceName;
  }


  public EvaluationResult evalDecision(@javax.annotation.Nonnull PolicyEvaluationDecisionType evalDecision) {
    this.evalDecision = evalDecision;
    return this;
  }

  /**
   * The result of the simulation.
   * @return evalDecision
   */
  @javax.annotation.Nonnull
  public PolicyEvaluationDecisionType getEvalDecision() {
    return evalDecision;
  }

  public void setEvalDecision(@javax.annotation.Nonnull PolicyEvaluationDecisionType evalDecision) {
    this.evalDecision = evalDecision;
  }


  public EvaluationResult matchedStatements(@javax.annotation.Nullable List<Statement> matchedStatements) {
    this.matchedStatements = matchedStatements;
    return this;
  }

  public EvaluationResult addMatchedStatementsItem(Statement matchedStatementsItem) {
    if (this.matchedStatements == null) {
      this.matchedStatements = new ArrayList<>();
    }
    this.matchedStatements.add(matchedStatementsItem);
    return this;
  }

  /**
   * A list of the statements in the input policies that determine the result for this scenario. Remember that even if multiple statements allow the operation on the resource, if only one statement denies that operation, then the explicit deny overrides any allow. In addition, the deny statement is the only entry included in the result.
   * @return matchedStatements
   */
  @javax.annotation.Nullable
  public List<Statement> getMatchedStatements() {
    return matchedStatements;
  }

  public void setMatchedStatements(@javax.annotation.Nullable List<Statement> matchedStatements) {
    this.matchedStatements = matchedStatements;
  }


  public EvaluationResult missingContextValues(@javax.annotation.Nullable List<String> missingContextValues) {
    this.missingContextValues = missingContextValues;
    return this;
  }

  public EvaluationResult addMissingContextValuesItem(String missingContextValuesItem) {
    if (this.missingContextValues == null) {
      this.missingContextValues = new ArrayList<>();
    }
    this.missingContextValues.add(missingContextValuesItem);
    return this;
  }

  /**
   * A list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when the resource in a simulation is \&quot;*\&quot;, either explicitly, or when the &lt;code&gt;ResourceArns&lt;/code&gt; parameter blank. If you include a list of resources, then any missing context values are instead included under the &lt;code&gt;ResourceSpecificResults&lt;/code&gt; section. To discover the context keys used by a set of policies, you can call &lt;a&gt;GetContextKeysForCustomPolicy&lt;/a&gt; or &lt;a&gt;GetContextKeysForPrincipalPolicy&lt;/a&gt;.
   * @return missingContextValues
   */
  @javax.annotation.Nullable
  public List<String> getMissingContextValues() {
    return missingContextValues;
  }

  public void setMissingContextValues(@javax.annotation.Nullable List<String> missingContextValues) {
    this.missingContextValues = missingContextValues;
  }


  public EvaluationResult organizationsDecisionDetail(@javax.annotation.Nullable OrganizationsDecisionDetail organizationsDecisionDetail) {
    this.organizationsDecisionDetail = organizationsDecisionDetail;
    return this;
  }

  /**
   * A structure that details how Organizations and its service control policies affect the results of the simulation. Only applies if the simulated user&#39;s account is part of an organization.
   * @return organizationsDecisionDetail
   */
  @javax.annotation.Nullable
  public OrganizationsDecisionDetail getOrganizationsDecisionDetail() {
    return organizationsDecisionDetail;
  }

  public void setOrganizationsDecisionDetail(@javax.annotation.Nullable OrganizationsDecisionDetail organizationsDecisionDetail) {
    this.organizationsDecisionDetail = organizationsDecisionDetail;
  }


  public EvaluationResult permissionsBoundaryDecisionDetail(@javax.annotation.Nullable PermissionsBoundaryDecisionDetail permissionsBoundaryDecisionDetail) {
    this.permissionsBoundaryDecisionDetail = permissionsBoundaryDecisionDetail;
    return this;
  }

  /**
   * Contains information about the effect that a permissions boundary has on a policy simulation when the boundary is applied to an IAM entity.
   * @return permissionsBoundaryDecisionDetail
   */
  @javax.annotation.Nullable
  public PermissionsBoundaryDecisionDetail getPermissionsBoundaryDecisionDetail() {
    return permissionsBoundaryDecisionDetail;
  }

  public void setPermissionsBoundaryDecisionDetail(@javax.annotation.Nullable PermissionsBoundaryDecisionDetail permissionsBoundaryDecisionDetail) {
    this.permissionsBoundaryDecisionDetail = permissionsBoundaryDecisionDetail;
  }


  public EvaluationResult evalDecisionDetails(@javax.annotation.Nullable Map<String, PolicyEvaluationDecisionType> evalDecisionDetails) {
    this.evalDecisionDetails = evalDecisionDetails;
    return this;
  }

  public EvaluationResult putEvalDecisionDetailsItem(String key, PolicyEvaluationDecisionType evalDecisionDetailsItem) {
    if (this.evalDecisionDetails == null) {
      this.evalDecisionDetails = new HashMap<>();
    }
    this.evalDecisionDetails.put(key, evalDecisionDetailsItem);
    return this;
  }

  /**
   * &lt;p&gt;Additional details about the results of the cross-account evaluation decision. This parameter is populated for only cross-account simulations. It contains a brief summary of how each policy type contributes to the final evaluation decision.&lt;/p&gt; &lt;p&gt;If the simulation evaluates policies within the same account and includes a resource ARN, then the parameter is present but the response is empty. If the simulation evaluates policies within the same account and specifies all resources (&lt;code&gt;*&lt;/code&gt;), then the parameter is not returned.&lt;/p&gt; &lt;p&gt;When you make a cross-account request, Amazon Web Services evaluates the request in the trusting account and the trusted account. The request is allowed only if both evaluations return &lt;code&gt;true&lt;/code&gt;. For more information about how policies are evaluated, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics\&quot;&gt;Evaluating policies within a single account&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If an Organizations SCP included in the evaluation denies access, the simulation ends. In this case, policy evaluation does not proceed any further and this parameter is not returned.&lt;/p&gt;
   * @return evalDecisionDetails
   */
  @javax.annotation.Nullable
  public Map<String, PolicyEvaluationDecisionType> getEvalDecisionDetails() {
    return evalDecisionDetails;
  }

  public void setEvalDecisionDetails(@javax.annotation.Nullable Map<String, PolicyEvaluationDecisionType> evalDecisionDetails) {
    this.evalDecisionDetails = evalDecisionDetails;
  }


  public EvaluationResult resourceSpecificResults(@javax.annotation.Nullable List<ResourceSpecificResult> resourceSpecificResults) {
    this.resourceSpecificResults = resourceSpecificResults;
    return this;
  }

  public EvaluationResult addResourceSpecificResultsItem(ResourceSpecificResult resourceSpecificResultsItem) {
    if (this.resourceSpecificResults == null) {
      this.resourceSpecificResults = new ArrayList<>();
    }
    this.resourceSpecificResults.add(resourceSpecificResultsItem);
    return this;
  }

  /**
   * The individual results of the simulation of the API operation specified in EvalActionName on each resource.
   * @return resourceSpecificResults
   */
  @javax.annotation.Nullable
  public List<ResourceSpecificResult> getResourceSpecificResults() {
    return resourceSpecificResults;
  }

  public void setResourceSpecificResults(@javax.annotation.Nullable List<ResourceSpecificResult> resourceSpecificResults) {
    this.resourceSpecificResults = resourceSpecificResults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvaluationResult evaluationResult = (EvaluationResult) o;
    return Objects.equals(this.evalActionName, evaluationResult.evalActionName) &&
        Objects.equals(this.evalResourceName, evaluationResult.evalResourceName) &&
        Objects.equals(this.evalDecision, evaluationResult.evalDecision) &&
        Objects.equals(this.matchedStatements, evaluationResult.matchedStatements) &&
        Objects.equals(this.missingContextValues, evaluationResult.missingContextValues) &&
        Objects.equals(this.organizationsDecisionDetail, evaluationResult.organizationsDecisionDetail) &&
        Objects.equals(this.permissionsBoundaryDecisionDetail, evaluationResult.permissionsBoundaryDecisionDetail) &&
        Objects.equals(this.evalDecisionDetails, evaluationResult.evalDecisionDetails) &&
        Objects.equals(this.resourceSpecificResults, evaluationResult.resourceSpecificResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evalActionName, evalResourceName, evalDecision, matchedStatements, missingContextValues, organizationsDecisionDetail, permissionsBoundaryDecisionDetail, evalDecisionDetails, resourceSpecificResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvaluationResult {\n");
    sb.append("    evalActionName: ").append(toIndentedString(evalActionName)).append("\n");
    sb.append("    evalResourceName: ").append(toIndentedString(evalResourceName)).append("\n");
    sb.append("    evalDecision: ").append(toIndentedString(evalDecision)).append("\n");
    sb.append("    matchedStatements: ").append(toIndentedString(matchedStatements)).append("\n");
    sb.append("    missingContextValues: ").append(toIndentedString(missingContextValues)).append("\n");
    sb.append("    organizationsDecisionDetail: ").append(toIndentedString(organizationsDecisionDetail)).append("\n");
    sb.append("    permissionsBoundaryDecisionDetail: ").append(toIndentedString(permissionsBoundaryDecisionDetail)).append("\n");
    sb.append("    evalDecisionDetails: ").append(toIndentedString(evalDecisionDetails)).append("\n");
    sb.append("    resourceSpecificResults: ").append(toIndentedString(resourceSpecificResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("EvalActionName", "EvalResourceName", "EvalDecision", "MatchedStatements", "MissingContextValues", "OrganizationsDecisionDetail", "PermissionsBoundaryDecisionDetail", "EvalDecisionDetails", "ResourceSpecificResults"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("EvalActionName", "EvalDecision"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EvaluationResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EvaluationResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EvaluationResult is not found in the empty JSON string", EvaluationResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EvaluationResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EvaluationResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EvaluationResult.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("EvalActionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EvalActionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EvalActionName").toString()));
      }
      if ((jsonObj.get("EvalResourceName") != null && !jsonObj.get("EvalResourceName").isJsonNull()) && !jsonObj.get("EvalResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EvalResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EvalResourceName").toString()));
      }
      // validate the required field `EvalDecision`
      PolicyEvaluationDecisionType.validateJsonElement(jsonObj.get("EvalDecision"));
      if (jsonObj.get("MatchedStatements") != null && !jsonObj.get("MatchedStatements").isJsonNull()) {
        JsonArray jsonArraymatchedStatements = jsonObj.getAsJsonArray("MatchedStatements");
        if (jsonArraymatchedStatements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("MatchedStatements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `MatchedStatements` to be an array in the JSON string but got `%s`", jsonObj.get("MatchedStatements").toString()));
          }

          // validate the optional field `MatchedStatements` (array)
          for (int i = 0; i < jsonArraymatchedStatements.size(); i++) {
            Statement.validateJsonElement(jsonArraymatchedStatements.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("MissingContextValues") != null && !jsonObj.get("MissingContextValues").isJsonNull() && !jsonObj.get("MissingContextValues").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `MissingContextValues` to be an array in the JSON string but got `%s`", jsonObj.get("MissingContextValues").toString()));
      }
      // validate the optional field `OrganizationsDecisionDetail`
      if (jsonObj.get("OrganizationsDecisionDetail") != null && !jsonObj.get("OrganizationsDecisionDetail").isJsonNull()) {
        OrganizationsDecisionDetail.validateJsonElement(jsonObj.get("OrganizationsDecisionDetail"));
      }
      // validate the optional field `PermissionsBoundaryDecisionDetail`
      if (jsonObj.get("PermissionsBoundaryDecisionDetail") != null && !jsonObj.get("PermissionsBoundaryDecisionDetail").isJsonNull()) {
        PermissionsBoundaryDecisionDetail.validateJsonElement(jsonObj.get("PermissionsBoundaryDecisionDetail"));
      }
      if (jsonObj.get("ResourceSpecificResults") != null && !jsonObj.get("ResourceSpecificResults").isJsonNull()) {
        JsonArray jsonArrayresourceSpecificResults = jsonObj.getAsJsonArray("ResourceSpecificResults");
        if (jsonArrayresourceSpecificResults != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ResourceSpecificResults").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ResourceSpecificResults` to be an array in the JSON string but got `%s`", jsonObj.get("ResourceSpecificResults").toString()));
          }

          // validate the optional field `ResourceSpecificResults` (array)
          for (int i = 0; i < jsonArrayresourceSpecificResults.size(); i++) {
            ResourceSpecificResult.validateJsonElement(jsonArrayresourceSpecificResults.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EvaluationResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EvaluationResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EvaluationResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EvaluationResult.class));

       return (TypeAdapter<T>) new TypeAdapter<EvaluationResult>() {
           @Override
           public void write(JsonWriter out, EvaluationResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EvaluationResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EvaluationResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EvaluationResult
   * @throws IOException if the JSON string is invalid with respect to EvaluationResult
   */
  public static EvaluationResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EvaluationResult.class);
  }

  /**
   * Convert an instance of EvaluationResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

