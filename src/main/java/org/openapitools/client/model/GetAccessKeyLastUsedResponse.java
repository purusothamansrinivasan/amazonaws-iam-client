/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AccessKeyLastUsed;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the response to a successful &lt;a&gt;GetAccessKeyLastUsed&lt;/a&gt; request. It is also returned as a member of the &lt;a&gt;AccessKeyMetaData&lt;/a&gt; structure returned by the &lt;a&gt;ListAccessKeys&lt;/a&gt; action.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class GetAccessKeyLastUsedResponse {
  public static final String SERIALIZED_NAME_USER_NAME = "UserName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  @javax.annotation.Nullable
  private String userName;

  public static final String SERIALIZED_NAME_ACCESS_KEY_LAST_USED = "AccessKeyLastUsed";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY_LAST_USED)
  @javax.annotation.Nullable
  private AccessKeyLastUsed accessKeyLastUsed;

  public GetAccessKeyLastUsedResponse() {
  }

  public GetAccessKeyLastUsedResponse userName(@javax.annotation.Nullable String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * &lt;p&gt;The name of the IAM user that owns this access key.&lt;/p&gt; &lt;p/&gt;
   * @return userName
   */
  @javax.annotation.Nullable
  public String getUserName() {
    return userName;
  }

  public void setUserName(@javax.annotation.Nullable String userName) {
    this.userName = userName;
  }


  public GetAccessKeyLastUsedResponse accessKeyLastUsed(@javax.annotation.Nullable AccessKeyLastUsed accessKeyLastUsed) {
    this.accessKeyLastUsed = accessKeyLastUsed;
    return this;
  }

  /**
   * Contains information about the last time the access key was used.
   * @return accessKeyLastUsed
   */
  @javax.annotation.Nullable
  public AccessKeyLastUsed getAccessKeyLastUsed() {
    return accessKeyLastUsed;
  }

  public void setAccessKeyLastUsed(@javax.annotation.Nullable AccessKeyLastUsed accessKeyLastUsed) {
    this.accessKeyLastUsed = accessKeyLastUsed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccessKeyLastUsedResponse getAccessKeyLastUsedResponse = (GetAccessKeyLastUsedResponse) o;
    return Objects.equals(this.userName, getAccessKeyLastUsedResponse.userName) &&
        Objects.equals(this.accessKeyLastUsed, getAccessKeyLastUsedResponse.accessKeyLastUsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userName, accessKeyLastUsed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccessKeyLastUsedResponse {\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    accessKeyLastUsed: ").append(toIndentedString(accessKeyLastUsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("UserName", "AccessKeyLastUsed"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAccessKeyLastUsedResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAccessKeyLastUsedResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAccessKeyLastUsedResponse is not found in the empty JSON string", GetAccessKeyLastUsedResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAccessKeyLastUsedResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAccessKeyLastUsedResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("UserName") != null && !jsonObj.get("UserName").isJsonNull()) && !jsonObj.get("UserName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UserName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserName").toString()));
      }
      // validate the optional field `AccessKeyLastUsed`
      if (jsonObj.get("AccessKeyLastUsed") != null && !jsonObj.get("AccessKeyLastUsed").isJsonNull()) {
        AccessKeyLastUsed.validateJsonElement(jsonObj.get("AccessKeyLastUsed"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAccessKeyLastUsedResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAccessKeyLastUsedResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAccessKeyLastUsedResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAccessKeyLastUsedResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAccessKeyLastUsedResponse>() {
           @Override
           public void write(JsonWriter out, GetAccessKeyLastUsedResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAccessKeyLastUsedResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAccessKeyLastUsedResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAccessKeyLastUsedResponse
   * @throws IOException if the JSON string is invalid with respect to GetAccessKeyLastUsedResponse
   */
  public static GetAccessKeyLastUsedResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAccessKeyLastUsedResponse.class);
  }

  /**
   * Convert an instance of GetAccessKeyLastUsedResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

