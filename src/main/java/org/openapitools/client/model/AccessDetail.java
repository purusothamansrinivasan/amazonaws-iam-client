/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;An object that contains details about when a principal in the reported Organizations entity last attempted to access an Amazon Web Services service. A principal can be an IAM user, an IAM role, or the Amazon Web Services account root user within the reported Organizations entity.&lt;/p&gt; &lt;p&gt;This data type is a response element in the &lt;a&gt;GetOrganizationsAccessReport&lt;/a&gt; operation.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class AccessDetail {
  public static final String SERIALIZED_NAME_SERVICE_NAME = "ServiceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  @javax.annotation.Nonnull
  private String serviceName;

  public static final String SERIALIZED_NAME_SERVICE_NAMESPACE = "ServiceNamespace";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAMESPACE)
  @javax.annotation.Nonnull
  private String serviceNamespace;

  public static final String SERIALIZED_NAME_REGION = "Region";
  @SerializedName(SERIALIZED_NAME_REGION)
  @javax.annotation.Nullable
  private String region;

  public static final String SERIALIZED_NAME_ENTITY_PATH = "EntityPath";
  @SerializedName(SERIALIZED_NAME_ENTITY_PATH)
  @javax.annotation.Nullable
  private String entityPath;

  public static final String SERIALIZED_NAME_LAST_AUTHENTICATED_TIME = "LastAuthenticatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_AUTHENTICATED_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime lastAuthenticatedTime;

  public static final String SERIALIZED_NAME_TOTAL_AUTHENTICATED_ENTITIES = "TotalAuthenticatedEntities";
  @SerializedName(SERIALIZED_NAME_TOTAL_AUTHENTICATED_ENTITIES)
  @javax.annotation.Nullable
  private Integer totalAuthenticatedEntities;

  public AccessDetail() {
  }

  public AccessDetail serviceName(@javax.annotation.Nonnull String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * The name of the service in which access was attempted.
   * @return serviceName
   */
  @javax.annotation.Nonnull
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(@javax.annotation.Nonnull String serviceName) {
    this.serviceName = serviceName;
  }


  public AccessDetail serviceNamespace(@javax.annotation.Nonnull String serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
    return this;
  }

  /**
   * &lt;p&gt;The namespace of the service in which access was attempted.&lt;/p&gt; &lt;p&gt;To learn the service namespace of a service, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\&quot;&gt;Actions, resources, and condition keys for Amazon Web Services services&lt;/a&gt; in the &lt;i&gt;Service Authorization Reference&lt;/i&gt;. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, &lt;code&gt;(service prefix: a4b)&lt;/code&gt;. For more information about service namespaces, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\&quot;&gt;Amazon Web Services service namespaces&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt;
   * @return serviceNamespace
   */
  @javax.annotation.Nonnull
  public String getServiceNamespace() {
    return serviceNamespace;
  }

  public void setServiceNamespace(@javax.annotation.Nonnull String serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
  }


  public AccessDetail region(@javax.annotation.Nullable String region) {
    this.region = region;
    return this;
  }

  /**
   * &lt;p&gt;The Region where the last service access attempt occurred.&lt;/p&gt; &lt;p&gt;This field is null if no principals in the reported Organizations entity attempted to access the service within the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\&quot;&gt;tracking period&lt;/a&gt;.&lt;/p&gt;
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(@javax.annotation.Nullable String region) {
    this.region = region;
  }


  public AccessDetail entityPath(@javax.annotation.Nullable String entityPath) {
    this.entityPath = entityPath;
    return this;
  }

  /**
   * &lt;p&gt;The path of the Organizations entity (root, organizational unit, or account) from which an authenticated principal last attempted to access the service. Amazon Web Services does not report unauthenticated requests.&lt;/p&gt; &lt;p&gt;This field is null if no principals (IAM users, IAM roles, or root user) in the reported Organizations entity attempted to access the service within the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\&quot;&gt;tracking period&lt;/a&gt;.&lt;/p&gt;
   * @return entityPath
   */
  @javax.annotation.Nullable
  public String getEntityPath() {
    return entityPath;
  }

  public void setEntityPath(@javax.annotation.Nullable String entityPath) {
    this.entityPath = entityPath;
  }


  public AccessDetail lastAuthenticatedTime(@javax.annotation.Nullable OffsetDateTime lastAuthenticatedTime) {
    this.lastAuthenticatedTime = lastAuthenticatedTime;
    return this;
  }

  /**
   * &lt;p&gt;The date and time, in &lt;a href&#x3D;\&quot;http://www.iso.org/iso/iso8601\&quot;&gt;ISO 8601 date-time format&lt;/a&gt;, when an authenticated principal most recently attempted to access the service. Amazon Web Services does not report unauthenticated requests.&lt;/p&gt; &lt;p&gt;This field is null if no principals in the reported Organizations entity attempted to access the service within the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\&quot;&gt;tracking period&lt;/a&gt;.&lt;/p&gt;
   * @return lastAuthenticatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastAuthenticatedTime() {
    return lastAuthenticatedTime;
  }

  public void setLastAuthenticatedTime(@javax.annotation.Nullable OffsetDateTime lastAuthenticatedTime) {
    this.lastAuthenticatedTime = lastAuthenticatedTime;
  }


  public AccessDetail totalAuthenticatedEntities(@javax.annotation.Nullable Integer totalAuthenticatedEntities) {
    this.totalAuthenticatedEntities = totalAuthenticatedEntities;
    return this;
  }

  /**
   * The number of accounts with authenticated principals (root user, IAM users, and IAM roles) that attempted to access the service in the tracking period.
   * @return totalAuthenticatedEntities
   */
  @javax.annotation.Nullable
  public Integer getTotalAuthenticatedEntities() {
    return totalAuthenticatedEntities;
  }

  public void setTotalAuthenticatedEntities(@javax.annotation.Nullable Integer totalAuthenticatedEntities) {
    this.totalAuthenticatedEntities = totalAuthenticatedEntities;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessDetail accessDetail = (AccessDetail) o;
    return Objects.equals(this.serviceName, accessDetail.serviceName) &&
        Objects.equals(this.serviceNamespace, accessDetail.serviceNamespace) &&
        Objects.equals(this.region, accessDetail.region) &&
        Objects.equals(this.entityPath, accessDetail.entityPath) &&
        Objects.equals(this.lastAuthenticatedTime, accessDetail.lastAuthenticatedTime) &&
        Objects.equals(this.totalAuthenticatedEntities, accessDetail.totalAuthenticatedEntities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceName, serviceNamespace, region, entityPath, lastAuthenticatedTime, totalAuthenticatedEntities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessDetail {\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    serviceNamespace: ").append(toIndentedString(serviceNamespace)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    entityPath: ").append(toIndentedString(entityPath)).append("\n");
    sb.append("    lastAuthenticatedTime: ").append(toIndentedString(lastAuthenticatedTime)).append("\n");
    sb.append("    totalAuthenticatedEntities: ").append(toIndentedString(totalAuthenticatedEntities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("ServiceName", "ServiceNamespace", "Region", "EntityPath", "LastAuthenticatedTime", "TotalAuthenticatedEntities"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("ServiceName", "ServiceNamespace"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccessDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccessDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccessDetail is not found in the empty JSON string", AccessDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccessDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccessDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AccessDetail.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("ServiceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ServiceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ServiceName").toString()));
      }
      if (!jsonObj.get("ServiceNamespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ServiceNamespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ServiceNamespace").toString()));
      }
      if ((jsonObj.get("Region") != null && !jsonObj.get("Region").isJsonNull()) && !jsonObj.get("Region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Region").toString()));
      }
      if ((jsonObj.get("EntityPath") != null && !jsonObj.get("EntityPath").isJsonNull()) && !jsonObj.get("EntityPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EntityPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EntityPath").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccessDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccessDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccessDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccessDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<AccessDetail>() {
           @Override
           public void write(JsonWriter out, AccessDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccessDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccessDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccessDetail
   * @throws IOException if the JSON string is invalid with respect to AccessDetail
   */
  public static AccessDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccessDetail.class);
  }

  /**
   * Convert an instance of AccessDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

