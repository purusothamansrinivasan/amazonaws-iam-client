/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreatePolicyVersionRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class CreatePolicyVersionRequest {
  public static final String SERIALIZED_NAME_POLICY_ARN = "PolicyArn";
  @SerializedName(SERIALIZED_NAME_POLICY_ARN)
  @javax.annotation.Nonnull
  private String policyArn;

  public static final String SERIALIZED_NAME_POLICY_DOCUMENT = "PolicyDocument";
  @SerializedName(SERIALIZED_NAME_POLICY_DOCUMENT)
  @javax.annotation.Nonnull
  private String policyDocument;

  public static final String SERIALIZED_NAME_SET_AS_DEFAULT = "SetAsDefault";
  @SerializedName(SERIALIZED_NAME_SET_AS_DEFAULT)
  @javax.annotation.Nullable
  private Boolean setAsDefault;

  public CreatePolicyVersionRequest() {
  }

  public CreatePolicyVersionRequest policyArn(@javax.annotation.Nonnull String policyArn) {
    this.policyArn = policyArn;
    return this;
  }

  /**
   * &lt;p&gt;The Amazon Resource Name (ARN) of the IAM policy to which you want to add a new version.&lt;/p&gt; &lt;p&gt;For more information about ARNs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt;
   * @return policyArn
   */
  @javax.annotation.Nonnull
  public String getPolicyArn() {
    return policyArn;
  }

  public void setPolicyArn(@javax.annotation.Nonnull String policyArn) {
    this.policyArn = policyArn;
  }


  public CreatePolicyVersionRequest policyDocument(@javax.annotation.Nonnull String policyDocument) {
    this.policyDocument = policyDocument;
    return this;
  }

  /**
   * &lt;p&gt;The JSON policy document that you want to use as the content for this new version of the policy.&lt;/p&gt; &lt;p&gt;You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.&lt;/p&gt; &lt;p&gt;The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length\&quot;&gt;IAM and STS character quotas&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The &lt;a href&#x3D;\&quot;http://wikipedia.org/wiki/regex\&quot;&gt;regex pattern&lt;/a&gt; used to validate this parameter is a string of characters consisting of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Any printable ASCII character ranging from the space character (&lt;code&gt;\\u0020&lt;/code&gt;) through the end of the ASCII character range&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The printable characters in the Basic Latin and Latin-1 Supplement character set (through &lt;code&gt;\\u00FF&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The special characters tab (&lt;code&gt;\\u0009&lt;/code&gt;), line feed (&lt;code&gt;\\u000A&lt;/code&gt;), and carriage return (&lt;code&gt;\\u000D&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return policyDocument
   */
  @javax.annotation.Nonnull
  public String getPolicyDocument() {
    return policyDocument;
  }

  public void setPolicyDocument(@javax.annotation.Nonnull String policyDocument) {
    this.policyDocument = policyDocument;
  }


  public CreatePolicyVersionRequest setAsDefault(@javax.annotation.Nullable Boolean setAsDefault) {
    this.setAsDefault = setAsDefault;
    return this;
  }

  /**
   * &lt;p&gt;Specifies whether to set this version as the policy&#39;s default version.&lt;/p&gt; &lt;p&gt;When this parameter is &lt;code&gt;true&lt;/code&gt;, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.&lt;/p&gt; &lt;p&gt;For more information about managed policy versions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\&quot;&gt;Versioning for managed policies&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt;
   * @return setAsDefault
   */
  @javax.annotation.Nullable
  public Boolean getSetAsDefault() {
    return setAsDefault;
  }

  public void setSetAsDefault(@javax.annotation.Nullable Boolean setAsDefault) {
    this.setAsDefault = setAsDefault;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePolicyVersionRequest createPolicyVersionRequest = (CreatePolicyVersionRequest) o;
    return Objects.equals(this.policyArn, createPolicyVersionRequest.policyArn) &&
        Objects.equals(this.policyDocument, createPolicyVersionRequest.policyDocument) &&
        Objects.equals(this.setAsDefault, createPolicyVersionRequest.setAsDefault);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policyArn, policyDocument, setAsDefault);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePolicyVersionRequest {\n");
    sb.append("    policyArn: ").append(toIndentedString(policyArn)).append("\n");
    sb.append("    policyDocument: ").append(toIndentedString(policyDocument)).append("\n");
    sb.append("    setAsDefault: ").append(toIndentedString(setAsDefault)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("PolicyArn", "PolicyDocument", "SetAsDefault"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("PolicyArn", "PolicyDocument"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreatePolicyVersionRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreatePolicyVersionRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreatePolicyVersionRequest is not found in the empty JSON string", CreatePolicyVersionRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreatePolicyVersionRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreatePolicyVersionRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreatePolicyVersionRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("PolicyArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PolicyArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PolicyArn").toString()));
      }
      if (!jsonObj.get("PolicyDocument").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PolicyDocument` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PolicyDocument").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreatePolicyVersionRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreatePolicyVersionRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreatePolicyVersionRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreatePolicyVersionRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreatePolicyVersionRequest>() {
           @Override
           public void write(JsonWriter out, CreatePolicyVersionRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreatePolicyVersionRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreatePolicyVersionRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreatePolicyVersionRequest
   * @throws IOException if the JSON string is invalid with respect to CreatePolicyVersionRequest
   */
  public static CreatePolicyVersionRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreatePolicyVersionRequest.class);
  }

  /**
   * Convert an instance of CreatePolicyVersionRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

