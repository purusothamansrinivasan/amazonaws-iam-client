/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AttachedPermissionsBoundary;
import org.openapitools.client.model.AttachedPolicy;
import org.openapitools.client.model.PolicyDetail;
import org.openapitools.client.model.Tag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Contains information about an IAM user, including all the user&#39;s policies and all the IAM groups the user is in.&lt;/p&gt; &lt;p&gt;This data type is used as a response element in the &lt;a&gt;GetAccountAuthorizationDetails&lt;/a&gt; operation.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class UserDetail {
  public static final String SERIALIZED_NAME_PATH = "Path";
  @SerializedName(SERIALIZED_NAME_PATH)
  @javax.annotation.Nullable
  private String path;

  public static final String SERIALIZED_NAME_USER_NAME = "UserName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  @javax.annotation.Nullable
  private String userName;

  public static final String SERIALIZED_NAME_USER_ID = "UserId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private String userId;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  @javax.annotation.Nullable
  private String arn;

  public static final String SERIALIZED_NAME_CREATE_DATE = "CreateDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime createDate;

  public static final String SERIALIZED_NAME_USER_POLICY_LIST = "UserPolicyList";
  @SerializedName(SERIALIZED_NAME_USER_POLICY_LIST)
  @javax.annotation.Nullable
  private List<PolicyDetail> userPolicyList;

  public static final String SERIALIZED_NAME_GROUP_LIST = "GroupList";
  @SerializedName(SERIALIZED_NAME_GROUP_LIST)
  @javax.annotation.Nullable
  private List<String> groupList;

  public static final String SERIALIZED_NAME_ATTACHED_MANAGED_POLICIES = "AttachedManagedPolicies";
  @SerializedName(SERIALIZED_NAME_ATTACHED_MANAGED_POLICIES)
  @javax.annotation.Nullable
  private List<AttachedPolicy> attachedManagedPolicies;

  public static final String SERIALIZED_NAME_PERMISSIONS_BOUNDARY = "PermissionsBoundary";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS_BOUNDARY)
  @javax.annotation.Nullable
  private AttachedPermissionsBoundary permissionsBoundary;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private List<Tag> tags;

  public UserDetail() {
  }

  public UserDetail path(@javax.annotation.Nullable String path) {
    this.path = path;
    return this;
  }

  /**
   * The path to the user. For more information about paths, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\&quot;&gt;IAM identifiers&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(@javax.annotation.Nullable String path) {
    this.path = path;
  }


  public UserDetail userName(@javax.annotation.Nullable String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * The friendly name identifying the user.
   * @return userName
   */
  @javax.annotation.Nullable
  public String getUserName() {
    return userName;
  }

  public void setUserName(@javax.annotation.Nullable String userName) {
    this.userName = userName;
  }


  public UserDetail userId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * The stable and unique string identifying the user. For more information about IDs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\&quot;&gt;IAM identifiers&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }


  public UserDetail arn(@javax.annotation.Nullable String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * &lt;p&gt;The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.&lt;/p&gt; &lt;p&gt;For more information about ARNs, go to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;. &lt;/p&gt;
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(@javax.annotation.Nullable String arn) {
    this.arn = arn;
  }


  public UserDetail createDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * The date and time, in &lt;a href&#x3D;\&quot;http://www.iso.org/iso/iso8601\&quot;&gt;ISO 8601 date-time format&lt;/a&gt;, when the user was created.
   * @return createDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public UserDetail userPolicyList(@javax.annotation.Nullable List<PolicyDetail> userPolicyList) {
    this.userPolicyList = userPolicyList;
    return this;
  }

  public UserDetail addUserPolicyListItem(PolicyDetail userPolicyListItem) {
    if (this.userPolicyList == null) {
      this.userPolicyList = new ArrayList<>();
    }
    this.userPolicyList.add(userPolicyListItem);
    return this;
  }

  /**
   * A list of the inline policies embedded in the user.
   * @return userPolicyList
   */
  @javax.annotation.Nullable
  public List<PolicyDetail> getUserPolicyList() {
    return userPolicyList;
  }

  public void setUserPolicyList(@javax.annotation.Nullable List<PolicyDetail> userPolicyList) {
    this.userPolicyList = userPolicyList;
  }


  public UserDetail groupList(@javax.annotation.Nullable List<String> groupList) {
    this.groupList = groupList;
    return this;
  }

  public UserDetail addGroupListItem(String groupListItem) {
    if (this.groupList == null) {
      this.groupList = new ArrayList<>();
    }
    this.groupList.add(groupListItem);
    return this;
  }

  /**
   * A list of IAM groups that the user is in.
   * @return groupList
   */
  @javax.annotation.Nullable
  public List<String> getGroupList() {
    return groupList;
  }

  public void setGroupList(@javax.annotation.Nullable List<String> groupList) {
    this.groupList = groupList;
  }


  public UserDetail attachedManagedPolicies(@javax.annotation.Nullable List<AttachedPolicy> attachedManagedPolicies) {
    this.attachedManagedPolicies = attachedManagedPolicies;
    return this;
  }

  public UserDetail addAttachedManagedPoliciesItem(AttachedPolicy attachedManagedPoliciesItem) {
    if (this.attachedManagedPolicies == null) {
      this.attachedManagedPolicies = new ArrayList<>();
    }
    this.attachedManagedPolicies.add(attachedManagedPoliciesItem);
    return this;
  }

  /**
   * A list of the managed policies attached to the user.
   * @return attachedManagedPolicies
   */
  @javax.annotation.Nullable
  public List<AttachedPolicy> getAttachedManagedPolicies() {
    return attachedManagedPolicies;
  }

  public void setAttachedManagedPolicies(@javax.annotation.Nullable List<AttachedPolicy> attachedManagedPolicies) {
    this.attachedManagedPolicies = attachedManagedPolicies;
  }


  public UserDetail permissionsBoundary(@javax.annotation.Nullable AttachedPermissionsBoundary permissionsBoundary) {
    this.permissionsBoundary = permissionsBoundary;
    return this;
  }

  /**
   * &lt;p&gt;The ARN of the policy used to set the permissions boundary for the user.&lt;/p&gt; &lt;p&gt;For more information about permissions boundaries, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\&quot;&gt;Permissions boundaries for IAM identities &lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.&lt;/p&gt;
   * @return permissionsBoundary
   */
  @javax.annotation.Nullable
  public AttachedPermissionsBoundary getPermissionsBoundary() {
    return permissionsBoundary;
  }

  public void setPermissionsBoundary(@javax.annotation.Nullable AttachedPermissionsBoundary permissionsBoundary) {
    this.permissionsBoundary = permissionsBoundary;
  }


  public UserDetail tags(@javax.annotation.Nullable List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public UserDetail addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * A list of tags that are associated with the user. For more information about tagging, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html\&quot;&gt;Tagging IAM resources&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;.
   * @return tags
   */
  @javax.annotation.Nullable
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable List<Tag> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDetail userDetail = (UserDetail) o;
    return Objects.equals(this.path, userDetail.path) &&
        Objects.equals(this.userName, userDetail.userName) &&
        Objects.equals(this.userId, userDetail.userId) &&
        Objects.equals(this.arn, userDetail.arn) &&
        Objects.equals(this.createDate, userDetail.createDate) &&
        Objects.equals(this.userPolicyList, userDetail.userPolicyList) &&
        Objects.equals(this.groupList, userDetail.groupList) &&
        Objects.equals(this.attachedManagedPolicies, userDetail.attachedManagedPolicies) &&
        Objects.equals(this.permissionsBoundary, userDetail.permissionsBoundary) &&
        Objects.equals(this.tags, userDetail.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(path, userName, userId, arn, createDate, userPolicyList, groupList, attachedManagedPolicies, permissionsBoundary, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDetail {\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    userPolicyList: ").append(toIndentedString(userPolicyList)).append("\n");
    sb.append("    groupList: ").append(toIndentedString(groupList)).append("\n");
    sb.append("    attachedManagedPolicies: ").append(toIndentedString(attachedManagedPolicies)).append("\n");
    sb.append("    permissionsBoundary: ").append(toIndentedString(permissionsBoundary)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("Path", "UserName", "UserId", "Arn", "CreateDate", "UserPolicyList", "GroupList", "AttachedManagedPolicies", "PermissionsBoundary", "Tags"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserDetail is not found in the empty JSON string", UserDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Path") != null && !jsonObj.get("Path").isJsonNull()) && !jsonObj.get("Path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Path").toString()));
      }
      if ((jsonObj.get("UserName") != null && !jsonObj.get("UserName").isJsonNull()) && !jsonObj.get("UserName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UserName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserName").toString()));
      }
      if ((jsonObj.get("UserId") != null && !jsonObj.get("UserId").isJsonNull()) && !jsonObj.get("UserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserId").toString()));
      }
      if ((jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) && !jsonObj.get("Arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Arn").toString()));
      }
      if (jsonObj.get("UserPolicyList") != null && !jsonObj.get("UserPolicyList").isJsonNull()) {
        JsonArray jsonArrayuserPolicyList = jsonObj.getAsJsonArray("UserPolicyList");
        if (jsonArrayuserPolicyList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("UserPolicyList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `UserPolicyList` to be an array in the JSON string but got `%s`", jsonObj.get("UserPolicyList").toString()));
          }

          // validate the optional field `UserPolicyList` (array)
          for (int i = 0; i < jsonArrayuserPolicyList.size(); i++) {
            PolicyDetail.validateJsonElement(jsonArrayuserPolicyList.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("GroupList") != null && !jsonObj.get("GroupList").isJsonNull() && !jsonObj.get("GroupList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `GroupList` to be an array in the JSON string but got `%s`", jsonObj.get("GroupList").toString()));
      }
      if (jsonObj.get("AttachedManagedPolicies") != null && !jsonObj.get("AttachedManagedPolicies").isJsonNull()) {
        JsonArray jsonArrayattachedManagedPolicies = jsonObj.getAsJsonArray("AttachedManagedPolicies");
        if (jsonArrayattachedManagedPolicies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("AttachedManagedPolicies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `AttachedManagedPolicies` to be an array in the JSON string but got `%s`", jsonObj.get("AttachedManagedPolicies").toString()));
          }

          // validate the optional field `AttachedManagedPolicies` (array)
          for (int i = 0; i < jsonArrayattachedManagedPolicies.size(); i++) {
            AttachedPolicy.validateJsonElement(jsonArrayattachedManagedPolicies.get(i));
          };
        }
      }
      // validate the optional field `PermissionsBoundary`
      if (jsonObj.get("PermissionsBoundary") != null && !jsonObj.get("PermissionsBoundary").isJsonNull()) {
        AttachedPermissionsBoundary.validateJsonElement(jsonObj.get("PermissionsBoundary"));
      }
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("Tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Tags` to be an array in the JSON string but got `%s`", jsonObj.get("Tags").toString()));
          }

          // validate the optional field `Tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            Tag.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<UserDetail>() {
           @Override
           public void write(JsonWriter out, UserDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserDetail
   * @throws IOException if the JSON string is invalid with respect to UserDetail
   */
  public static UserDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserDetail.class);
  }

  /**
   * Convert an instance of UserDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

