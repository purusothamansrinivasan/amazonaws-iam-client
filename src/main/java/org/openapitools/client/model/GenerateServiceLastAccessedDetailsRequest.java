/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AccessAdvisorUsageGranularityType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GenerateServiceLastAccessedDetailsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class GenerateServiceLastAccessedDetailsRequest {
  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  @javax.annotation.Nonnull
  private String arn;

  public static final String SERIALIZED_NAME_GRANULARITY = "Granularity";
  @SerializedName(SERIALIZED_NAME_GRANULARITY)
  @javax.annotation.Nullable
  private AccessAdvisorUsageGranularityType granularity;

  public GenerateServiceLastAccessedDetailsRequest() {
  }

  public GenerateServiceLastAccessedDetailsRequest arn(@javax.annotation.Nonnull String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * The ARN of the IAM resource (user, group, role, or managed policy) used to generate information about when the resource was last used in an attempt to access an Amazon Web Services service.
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(@javax.annotation.Nonnull String arn) {
    this.arn = arn;
  }


  public GenerateServiceLastAccessedDetailsRequest granularity(@javax.annotation.Nullable AccessAdvisorUsageGranularityType granularity) {
    this.granularity = granularity;
    return this;
  }

  /**
   * The level of detail that you want to generate. You can specify whether you want to generate information about the last attempt to access services or actions. If you specify service-level granularity, this operation generates only service data. If you specify action-level granularity, it generates service and action data. If you don&#39;t include this optional parameter, the operation generates service data.
   * @return granularity
   */
  @javax.annotation.Nullable
  public AccessAdvisorUsageGranularityType getGranularity() {
    return granularity;
  }

  public void setGranularity(@javax.annotation.Nullable AccessAdvisorUsageGranularityType granularity) {
    this.granularity = granularity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateServiceLastAccessedDetailsRequest generateServiceLastAccessedDetailsRequest = (GenerateServiceLastAccessedDetailsRequest) o;
    return Objects.equals(this.arn, generateServiceLastAccessedDetailsRequest.arn) &&
        Objects.equals(this.granularity, generateServiceLastAccessedDetailsRequest.granularity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, granularity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateServiceLastAccessedDetailsRequest {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    granularity: ").append(toIndentedString(granularity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("Arn", "Granularity"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("Arn"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GenerateServiceLastAccessedDetailsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GenerateServiceLastAccessedDetailsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GenerateServiceLastAccessedDetailsRequest is not found in the empty JSON string", GenerateServiceLastAccessedDetailsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GenerateServiceLastAccessedDetailsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GenerateServiceLastAccessedDetailsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GenerateServiceLastAccessedDetailsRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("Arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Arn").toString()));
      }
      // validate the optional field `Granularity`
      if (jsonObj.get("Granularity") != null && !jsonObj.get("Granularity").isJsonNull()) {
        AccessAdvisorUsageGranularityType.validateJsonElement(jsonObj.get("Granularity"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GenerateServiceLastAccessedDetailsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GenerateServiceLastAccessedDetailsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GenerateServiceLastAccessedDetailsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GenerateServiceLastAccessedDetailsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GenerateServiceLastAccessedDetailsRequest>() {
           @Override
           public void write(JsonWriter out, GenerateServiceLastAccessedDetailsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GenerateServiceLastAccessedDetailsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GenerateServiceLastAccessedDetailsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GenerateServiceLastAccessedDetailsRequest
   * @throws IOException if the JSON string is invalid with respect to GenerateServiceLastAccessedDetailsRequest
   */
  public static GenerateServiceLastAccessedDetailsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GenerateServiceLastAccessedDetailsRequest.class);
  }

  /**
   * Convert an instance of GenerateServiceLastAccessedDetailsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

