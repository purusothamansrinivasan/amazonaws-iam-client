/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.PermissionsBoundaryDecisionDetail;
import org.openapitools.client.model.PolicyEvaluationDecisionType;
import org.openapitools.client.model.Statement;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Contains the result of the simulation of a single API operation call on a single resource.&lt;/p&gt; &lt;p&gt;This data type is used by a member of the &lt;a&gt;EvaluationResult&lt;/a&gt; data type.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class ResourceSpecificResult {
  public static final String SERIALIZED_NAME_EVAL_RESOURCE_NAME = "EvalResourceName";
  @SerializedName(SERIALIZED_NAME_EVAL_RESOURCE_NAME)
  @javax.annotation.Nonnull
  private String evalResourceName;

  public static final String SERIALIZED_NAME_EVAL_RESOURCE_DECISION = "EvalResourceDecision";
  @SerializedName(SERIALIZED_NAME_EVAL_RESOURCE_DECISION)
  @javax.annotation.Nonnull
  private PolicyEvaluationDecisionType evalResourceDecision;

  public static final String SERIALIZED_NAME_MATCHED_STATEMENTS = "MatchedStatements";
  @SerializedName(SERIALIZED_NAME_MATCHED_STATEMENTS)
  @javax.annotation.Nullable
  private List<Statement> matchedStatements;

  public static final String SERIALIZED_NAME_MISSING_CONTEXT_VALUES = "MissingContextValues";
  @SerializedName(SERIALIZED_NAME_MISSING_CONTEXT_VALUES)
  @javax.annotation.Nullable
  private List<String> missingContextValues;

  public static final String SERIALIZED_NAME_EVAL_DECISION_DETAILS = "EvalDecisionDetails";
  @SerializedName(SERIALIZED_NAME_EVAL_DECISION_DETAILS)
  @javax.annotation.Nullable
  private Map<String, PolicyEvaluationDecisionType> evalDecisionDetails;

  public static final String SERIALIZED_NAME_PERMISSIONS_BOUNDARY_DECISION_DETAIL = "PermissionsBoundaryDecisionDetail";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS_BOUNDARY_DECISION_DETAIL)
  @javax.annotation.Nullable
  private PermissionsBoundaryDecisionDetail permissionsBoundaryDecisionDetail;

  public ResourceSpecificResult() {
  }

  public ResourceSpecificResult evalResourceName(@javax.annotation.Nonnull String evalResourceName) {
    this.evalResourceName = evalResourceName;
    return this;
  }

  /**
   * The name of the simulated resource, in Amazon Resource Name (ARN) format.
   * @return evalResourceName
   */
  @javax.annotation.Nonnull
  public String getEvalResourceName() {
    return evalResourceName;
  }

  public void setEvalResourceName(@javax.annotation.Nonnull String evalResourceName) {
    this.evalResourceName = evalResourceName;
  }


  public ResourceSpecificResult evalResourceDecision(@javax.annotation.Nonnull PolicyEvaluationDecisionType evalResourceDecision) {
    this.evalResourceDecision = evalResourceDecision;
    return this;
  }

  /**
   * The result of the simulation of the simulated API operation on the resource specified in &lt;code&gt;EvalResourceName&lt;/code&gt;.
   * @return evalResourceDecision
   */
  @javax.annotation.Nonnull
  public PolicyEvaluationDecisionType getEvalResourceDecision() {
    return evalResourceDecision;
  }

  public void setEvalResourceDecision(@javax.annotation.Nonnull PolicyEvaluationDecisionType evalResourceDecision) {
    this.evalResourceDecision = evalResourceDecision;
  }


  public ResourceSpecificResult matchedStatements(@javax.annotation.Nullable List<Statement> matchedStatements) {
    this.matchedStatements = matchedStatements;
    return this;
  }

  public ResourceSpecificResult addMatchedStatementsItem(Statement matchedStatementsItem) {
    if (this.matchedStatements == null) {
      this.matchedStatements = new ArrayList<>();
    }
    this.matchedStatements.add(matchedStatementsItem);
    return this;
  }

  /**
   * A list of the statements in the input policies that determine the result for this part of the simulation. Remember that even if multiple statements allow the operation on the resource, if &lt;i&gt;any&lt;/i&gt; statement denies that operation, then the explicit deny overrides any allow. In addition, the deny statement is the only entry included in the result.
   * @return matchedStatements
   */
  @javax.annotation.Nullable
  public List<Statement> getMatchedStatements() {
    return matchedStatements;
  }

  public void setMatchedStatements(@javax.annotation.Nullable List<Statement> matchedStatements) {
    this.matchedStatements = matchedStatements;
  }


  public ResourceSpecificResult missingContextValues(@javax.annotation.Nullable List<String> missingContextValues) {
    this.missingContextValues = missingContextValues;
    return this;
  }

  public ResourceSpecificResult addMissingContextValuesItem(String missingContextValuesItem) {
    if (this.missingContextValues == null) {
      this.missingContextValues = new ArrayList<>();
    }
    this.missingContextValues.add(missingContextValuesItem);
    return this;
  }

  /**
   * A list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when a list of ARNs is included in the &lt;code&gt;ResourceArns&lt;/code&gt; parameter instead of \&quot;*\&quot;. If you do not specify individual resources, by setting &lt;code&gt;ResourceArns&lt;/code&gt; to \&quot;*\&quot; or by not including the &lt;code&gt;ResourceArns&lt;/code&gt; parameter, then any missing context values are instead included under the &lt;code&gt;EvaluationResults&lt;/code&gt; section. To discover the context keys used by a set of policies, you can call &lt;a&gt;GetContextKeysForCustomPolicy&lt;/a&gt; or &lt;a&gt;GetContextKeysForPrincipalPolicy&lt;/a&gt;.
   * @return missingContextValues
   */
  @javax.annotation.Nullable
  public List<String> getMissingContextValues() {
    return missingContextValues;
  }

  public void setMissingContextValues(@javax.annotation.Nullable List<String> missingContextValues) {
    this.missingContextValues = missingContextValues;
  }


  public ResourceSpecificResult evalDecisionDetails(@javax.annotation.Nullable Map<String, PolicyEvaluationDecisionType> evalDecisionDetails) {
    this.evalDecisionDetails = evalDecisionDetails;
    return this;
  }

  public ResourceSpecificResult putEvalDecisionDetailsItem(String key, PolicyEvaluationDecisionType evalDecisionDetailsItem) {
    if (this.evalDecisionDetails == null) {
      this.evalDecisionDetails = new HashMap<>();
    }
    this.evalDecisionDetails.put(key, evalDecisionDetailsItem);
    return this;
  }

  /**
   * Additional details about the results of the evaluation decision on a single resource. This parameter is returned only for cross-account simulations. This parameter explains how each policy type contributes to the resource-specific evaluation decision.
   * @return evalDecisionDetails
   */
  @javax.annotation.Nullable
  public Map<String, PolicyEvaluationDecisionType> getEvalDecisionDetails() {
    return evalDecisionDetails;
  }

  public void setEvalDecisionDetails(@javax.annotation.Nullable Map<String, PolicyEvaluationDecisionType> evalDecisionDetails) {
    this.evalDecisionDetails = evalDecisionDetails;
  }


  public ResourceSpecificResult permissionsBoundaryDecisionDetail(@javax.annotation.Nullable PermissionsBoundaryDecisionDetail permissionsBoundaryDecisionDetail) {
    this.permissionsBoundaryDecisionDetail = permissionsBoundaryDecisionDetail;
    return this;
  }

  /**
   * Contains information about the effect that a permissions boundary has on a policy simulation when that boundary is applied to an IAM entity.
   * @return permissionsBoundaryDecisionDetail
   */
  @javax.annotation.Nullable
  public PermissionsBoundaryDecisionDetail getPermissionsBoundaryDecisionDetail() {
    return permissionsBoundaryDecisionDetail;
  }

  public void setPermissionsBoundaryDecisionDetail(@javax.annotation.Nullable PermissionsBoundaryDecisionDetail permissionsBoundaryDecisionDetail) {
    this.permissionsBoundaryDecisionDetail = permissionsBoundaryDecisionDetail;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceSpecificResult resourceSpecificResult = (ResourceSpecificResult) o;
    return Objects.equals(this.evalResourceName, resourceSpecificResult.evalResourceName) &&
        Objects.equals(this.evalResourceDecision, resourceSpecificResult.evalResourceDecision) &&
        Objects.equals(this.matchedStatements, resourceSpecificResult.matchedStatements) &&
        Objects.equals(this.missingContextValues, resourceSpecificResult.missingContextValues) &&
        Objects.equals(this.evalDecisionDetails, resourceSpecificResult.evalDecisionDetails) &&
        Objects.equals(this.permissionsBoundaryDecisionDetail, resourceSpecificResult.permissionsBoundaryDecisionDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evalResourceName, evalResourceDecision, matchedStatements, missingContextValues, evalDecisionDetails, permissionsBoundaryDecisionDetail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceSpecificResult {\n");
    sb.append("    evalResourceName: ").append(toIndentedString(evalResourceName)).append("\n");
    sb.append("    evalResourceDecision: ").append(toIndentedString(evalResourceDecision)).append("\n");
    sb.append("    matchedStatements: ").append(toIndentedString(matchedStatements)).append("\n");
    sb.append("    missingContextValues: ").append(toIndentedString(missingContextValues)).append("\n");
    sb.append("    evalDecisionDetails: ").append(toIndentedString(evalDecisionDetails)).append("\n");
    sb.append("    permissionsBoundaryDecisionDetail: ").append(toIndentedString(permissionsBoundaryDecisionDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("EvalResourceName", "EvalResourceDecision", "MatchedStatements", "MissingContextValues", "EvalDecisionDetails", "PermissionsBoundaryDecisionDetail"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("EvalResourceName", "EvalResourceDecision"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceSpecificResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceSpecificResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceSpecificResult is not found in the empty JSON string", ResourceSpecificResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceSpecificResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceSpecificResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ResourceSpecificResult.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("EvalResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EvalResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EvalResourceName").toString()));
      }
      // validate the required field `EvalResourceDecision`
      PolicyEvaluationDecisionType.validateJsonElement(jsonObj.get("EvalResourceDecision"));
      if (jsonObj.get("MatchedStatements") != null && !jsonObj.get("MatchedStatements").isJsonNull()) {
        JsonArray jsonArraymatchedStatements = jsonObj.getAsJsonArray("MatchedStatements");
        if (jsonArraymatchedStatements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("MatchedStatements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `MatchedStatements` to be an array in the JSON string but got `%s`", jsonObj.get("MatchedStatements").toString()));
          }

          // validate the optional field `MatchedStatements` (array)
          for (int i = 0; i < jsonArraymatchedStatements.size(); i++) {
            Statement.validateJsonElement(jsonArraymatchedStatements.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("MissingContextValues") != null && !jsonObj.get("MissingContextValues").isJsonNull() && !jsonObj.get("MissingContextValues").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `MissingContextValues` to be an array in the JSON string but got `%s`", jsonObj.get("MissingContextValues").toString()));
      }
      // validate the optional field `PermissionsBoundaryDecisionDetail`
      if (jsonObj.get("PermissionsBoundaryDecisionDetail") != null && !jsonObj.get("PermissionsBoundaryDecisionDetail").isJsonNull()) {
        PermissionsBoundaryDecisionDetail.validateJsonElement(jsonObj.get("PermissionsBoundaryDecisionDetail"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceSpecificResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceSpecificResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceSpecificResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceSpecificResult.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceSpecificResult>() {
           @Override
           public void write(JsonWriter out, ResourceSpecificResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceSpecificResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceSpecificResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceSpecificResult
   * @throws IOException if the JSON string is invalid with respect to ResourceSpecificResult
   */
  public static ResourceSpecificResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceSpecificResult.class);
  }

  /**
   * Convert an instance of ResourceSpecificResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

