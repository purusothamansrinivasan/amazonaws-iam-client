/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccessAdvisorUsageGranularityType;
import org.openapitools.client.model.ErrorDetails;
import org.openapitools.client.model.JobStatusType;
import org.openapitools.client.model.ServiceLastAccessed;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetServiceLastAccessedDetailsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:26:34.090256+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class GetServiceLastAccessedDetailsResponse {
  public static final String SERIALIZED_NAME_JOB_STATUS = "JobStatus";
  @SerializedName(SERIALIZED_NAME_JOB_STATUS)
  @javax.annotation.Nonnull
  private JobStatusType jobStatus;

  public static final String SERIALIZED_NAME_JOB_TYPE = "JobType";
  @SerializedName(SERIALIZED_NAME_JOB_TYPE)
  @javax.annotation.Nullable
  private AccessAdvisorUsageGranularityType jobType;

  public static final String SERIALIZED_NAME_JOB_CREATION_DATE = "JobCreationDate";
  @SerializedName(SERIALIZED_NAME_JOB_CREATION_DATE)
  @javax.annotation.Nonnull
  private OffsetDateTime jobCreationDate;

  public static final String SERIALIZED_NAME_SERVICES_LAST_ACCESSED = "ServicesLastAccessed";
  @SerializedName(SERIALIZED_NAME_SERVICES_LAST_ACCESSED)
  @javax.annotation.Nonnull
  private List<ServiceLastAccessed> servicesLastAccessed;

  public static final String SERIALIZED_NAME_JOB_COMPLETION_DATE = "JobCompletionDate";
  @SerializedName(SERIALIZED_NAME_JOB_COMPLETION_DATE)
  @javax.annotation.Nonnull
  private OffsetDateTime jobCompletionDate;

  public static final String SERIALIZED_NAME_IS_TRUNCATED = "IsTruncated";
  @SerializedName(SERIALIZED_NAME_IS_TRUNCATED)
  @javax.annotation.Nullable
  private Boolean isTruncated;

  public static final String SERIALIZED_NAME_MARKER = "Marker";
  @SerializedName(SERIALIZED_NAME_MARKER)
  @javax.annotation.Nullable
  private String marker;

  public static final String SERIALIZED_NAME_ERROR = "Error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  @javax.annotation.Nullable
  private ErrorDetails error;

  public GetServiceLastAccessedDetailsResponse() {
  }

  public GetServiceLastAccessedDetailsResponse jobStatus(@javax.annotation.Nonnull JobStatusType jobStatus) {
    this.jobStatus = jobStatus;
    return this;
  }

  /**
   * The status of the job.
   * @return jobStatus
   */
  @javax.annotation.Nonnull
  public JobStatusType getJobStatus() {
    return jobStatus;
  }

  public void setJobStatus(@javax.annotation.Nonnull JobStatusType jobStatus) {
    this.jobStatus = jobStatus;
  }


  public GetServiceLastAccessedDetailsResponse jobType(@javax.annotation.Nullable AccessAdvisorUsageGranularityType jobType) {
    this.jobType = jobType;
    return this;
  }

  /**
   * The type of job. Service jobs return information about when each service was last accessed. Action jobs also include information about when tracked actions within the service were last accessed.
   * @return jobType
   */
  @javax.annotation.Nullable
  public AccessAdvisorUsageGranularityType getJobType() {
    return jobType;
  }

  public void setJobType(@javax.annotation.Nullable AccessAdvisorUsageGranularityType jobType) {
    this.jobType = jobType;
  }


  public GetServiceLastAccessedDetailsResponse jobCreationDate(@javax.annotation.Nonnull OffsetDateTime jobCreationDate) {
    this.jobCreationDate = jobCreationDate;
    return this;
  }

  /**
   * The date and time, in &lt;a href&#x3D;\&quot;http://www.iso.org/iso/iso8601\&quot;&gt;ISO 8601 date-time format&lt;/a&gt;, when the report job was created.
   * @return jobCreationDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getJobCreationDate() {
    return jobCreationDate;
  }

  public void setJobCreationDate(@javax.annotation.Nonnull OffsetDateTime jobCreationDate) {
    this.jobCreationDate = jobCreationDate;
  }


  public GetServiceLastAccessedDetailsResponse servicesLastAccessed(@javax.annotation.Nonnull List<ServiceLastAccessed> servicesLastAccessed) {
    this.servicesLastAccessed = servicesLastAccessed;
    return this;
  }

  public GetServiceLastAccessedDetailsResponse addServicesLastAccessedItem(ServiceLastAccessed servicesLastAccessedItem) {
    if (this.servicesLastAccessed == null) {
      this.servicesLastAccessed = new ArrayList<>();
    }
    this.servicesLastAccessed.add(servicesLastAccessedItem);
    return this;
  }

  /**
   *  A &lt;code&gt;ServiceLastAccessed&lt;/code&gt; object that contains details about the most recent attempt to access the service.
   * @return servicesLastAccessed
   */
  @javax.annotation.Nonnull
  public List<ServiceLastAccessed> getServicesLastAccessed() {
    return servicesLastAccessed;
  }

  public void setServicesLastAccessed(@javax.annotation.Nonnull List<ServiceLastAccessed> servicesLastAccessed) {
    this.servicesLastAccessed = servicesLastAccessed;
  }


  public GetServiceLastAccessedDetailsResponse jobCompletionDate(@javax.annotation.Nonnull OffsetDateTime jobCompletionDate) {
    this.jobCompletionDate = jobCompletionDate;
    return this;
  }

  /**
   * &lt;p&gt;The date and time, in &lt;a href&#x3D;\&quot;http://www.iso.org/iso/iso8601\&quot;&gt;ISO 8601 date-time format&lt;/a&gt;, when the generated report job was completed or failed.&lt;/p&gt; &lt;p&gt;This field is null if the job is still in progress, as indicated by a job status value of &lt;code&gt;IN_PROGRESS&lt;/code&gt;.&lt;/p&gt;
   * @return jobCompletionDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getJobCompletionDate() {
    return jobCompletionDate;
  }

  public void setJobCompletionDate(@javax.annotation.Nonnull OffsetDateTime jobCompletionDate) {
    this.jobCompletionDate = jobCompletionDate;
  }


  public GetServiceLastAccessedDetailsResponse isTruncated(@javax.annotation.Nullable Boolean isTruncated) {
    this.isTruncated = isTruncated;
    return this;
  }

  /**
   * A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the &lt;code&gt;Marker&lt;/code&gt; request parameter to retrieve more items. Note that IAM might return fewer than the &lt;code&gt;MaxItems&lt;/code&gt; number of results even when there are more results available. We recommend that you check &lt;code&gt;IsTruncated&lt;/code&gt; after every call to ensure that you receive all your results.
   * @return isTruncated
   */
  @javax.annotation.Nullable
  public Boolean getIsTruncated() {
    return isTruncated;
  }

  public void setIsTruncated(@javax.annotation.Nullable Boolean isTruncated) {
    this.isTruncated = isTruncated;
  }


  public GetServiceLastAccessedDetailsResponse marker(@javax.annotation.Nullable String marker) {
    this.marker = marker;
    return this;
  }

  /**
   * When &lt;code&gt;IsTruncated&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, this element is present and contains the value to use for the &lt;code&gt;Marker&lt;/code&gt; parameter in a subsequent pagination request.
   * @return marker
   */
  @javax.annotation.Nullable
  public String getMarker() {
    return marker;
  }

  public void setMarker(@javax.annotation.Nullable String marker) {
    this.marker = marker;
  }


  public GetServiceLastAccessedDetailsResponse error(@javax.annotation.Nullable ErrorDetails error) {
    this.error = error;
    return this;
  }

  /**
   * An object that contains details about the reason the operation failed.
   * @return error
   */
  @javax.annotation.Nullable
  public ErrorDetails getError() {
    return error;
  }

  public void setError(@javax.annotation.Nullable ErrorDetails error) {
    this.error = error;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetServiceLastAccessedDetailsResponse getServiceLastAccessedDetailsResponse = (GetServiceLastAccessedDetailsResponse) o;
    return Objects.equals(this.jobStatus, getServiceLastAccessedDetailsResponse.jobStatus) &&
        Objects.equals(this.jobType, getServiceLastAccessedDetailsResponse.jobType) &&
        Objects.equals(this.jobCreationDate, getServiceLastAccessedDetailsResponse.jobCreationDate) &&
        Objects.equals(this.servicesLastAccessed, getServiceLastAccessedDetailsResponse.servicesLastAccessed) &&
        Objects.equals(this.jobCompletionDate, getServiceLastAccessedDetailsResponse.jobCompletionDate) &&
        Objects.equals(this.isTruncated, getServiceLastAccessedDetailsResponse.isTruncated) &&
        Objects.equals(this.marker, getServiceLastAccessedDetailsResponse.marker) &&
        Objects.equals(this.error, getServiceLastAccessedDetailsResponse.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobStatus, jobType, jobCreationDate, servicesLastAccessed, jobCompletionDate, isTruncated, marker, error);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetServiceLastAccessedDetailsResponse {\n");
    sb.append("    jobStatus: ").append(toIndentedString(jobStatus)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    jobCreationDate: ").append(toIndentedString(jobCreationDate)).append("\n");
    sb.append("    servicesLastAccessed: ").append(toIndentedString(servicesLastAccessed)).append("\n");
    sb.append("    jobCompletionDate: ").append(toIndentedString(jobCompletionDate)).append("\n");
    sb.append("    isTruncated: ").append(toIndentedString(isTruncated)).append("\n");
    sb.append("    marker: ").append(toIndentedString(marker)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("JobStatus", "JobType", "JobCreationDate", "ServicesLastAccessed", "JobCompletionDate", "IsTruncated", "Marker", "Error"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("JobStatus", "JobCreationDate", "ServicesLastAccessed", "JobCompletionDate"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetServiceLastAccessedDetailsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetServiceLastAccessedDetailsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetServiceLastAccessedDetailsResponse is not found in the empty JSON string", GetServiceLastAccessedDetailsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetServiceLastAccessedDetailsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetServiceLastAccessedDetailsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetServiceLastAccessedDetailsResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `JobStatus`
      JobStatusType.validateJsonElement(jsonObj.get("JobStatus"));
      // validate the optional field `JobType`
      if (jsonObj.get("JobType") != null && !jsonObj.get("JobType").isJsonNull()) {
        AccessAdvisorUsageGranularityType.validateJsonElement(jsonObj.get("JobType"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("ServicesLastAccessed").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ServicesLastAccessed` to be an array in the JSON string but got `%s`", jsonObj.get("ServicesLastAccessed").toString()));
      }

      JsonArray jsonArrayservicesLastAccessed = jsonObj.getAsJsonArray("ServicesLastAccessed");
      // validate the required field `ServicesLastAccessed` (array)
      for (int i = 0; i < jsonArrayservicesLastAccessed.size(); i++) {
        ServiceLastAccessed.validateJsonElement(jsonArrayservicesLastAccessed.get(i));
      };
      if ((jsonObj.get("Marker") != null && !jsonObj.get("Marker").isJsonNull()) && !jsonObj.get("Marker").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Marker` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Marker").toString()));
      }
      // validate the optional field `Error`
      if (jsonObj.get("Error") != null && !jsonObj.get("Error").isJsonNull()) {
        ErrorDetails.validateJsonElement(jsonObj.get("Error"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetServiceLastAccessedDetailsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetServiceLastAccessedDetailsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetServiceLastAccessedDetailsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetServiceLastAccessedDetailsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetServiceLastAccessedDetailsResponse>() {
           @Override
           public void write(JsonWriter out, GetServiceLastAccessedDetailsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetServiceLastAccessedDetailsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetServiceLastAccessedDetailsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetServiceLastAccessedDetailsResponse
   * @throws IOException if the JSON string is invalid with respect to GetServiceLastAccessedDetailsResponse
   */
  public static GetServiceLastAccessedDetailsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetServiceLastAccessedDetailsResponse.class);
  }

  /**
   * Convert an instance of GetServiceLastAccessedDetailsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

