/*
 * AWS Identity and Access Management
 * <fullname>Identity and Access Management</fullname> <p>Identity and Access Management (IAM) is a web service for securely controlling access to Amazon Web Services services. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which Amazon Web Services resources users and applications can access. For more information about IAM, see <a href=\"http://aws.amazon.com/iam/\">Identity and Access Management (IAM)</a> and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/\">Identity and Access Management User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2010-05-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateAccountPasswordPolicyRequest
 */
public class UpdateAccountPasswordPolicyRequestTest {
    private final UpdateAccountPasswordPolicyRequest model = new UpdateAccountPasswordPolicyRequest();

    /**
     * Model tests for UpdateAccountPasswordPolicyRequest
     */
    @Test
    public void testUpdateAccountPasswordPolicyRequest() {
        // TODO: test UpdateAccountPasswordPolicyRequest
    }

    /**
     * Test the property 'minimumPasswordLength'
     */
    @Test
    public void minimumPasswordLengthTest() {
        // TODO: test minimumPasswordLength
    }

    /**
     * Test the property 'requireSymbols'
     */
    @Test
    public void requireSymbolsTest() {
        // TODO: test requireSymbols
    }

    /**
     * Test the property 'requireNumbers'
     */
    @Test
    public void requireNumbersTest() {
        // TODO: test requireNumbers
    }

    /**
     * Test the property 'requireUppercaseCharacters'
     */
    @Test
    public void requireUppercaseCharactersTest() {
        // TODO: test requireUppercaseCharacters
    }

    /**
     * Test the property 'requireLowercaseCharacters'
     */
    @Test
    public void requireLowercaseCharactersTest() {
        // TODO: test requireLowercaseCharacters
    }

    /**
     * Test the property 'allowUsersToChangePassword'
     */
    @Test
    public void allowUsersToChangePasswordTest() {
        // TODO: test allowUsersToChangePassword
    }

    /**
     * Test the property 'maxPasswordAge'
     */
    @Test
    public void maxPasswordAgeTest() {
        // TODO: test maxPasswordAge
    }

    /**
     * Test the property 'passwordReusePrevention'
     */
    @Test
    public void passwordReusePreventionTest() {
        // TODO: test passwordReusePrevention
    }

    /**
     * Test the property 'hardExpiry'
     */
    @Test
    public void hardExpiryTest() {
        // TODO: test hardExpiry
    }

}
